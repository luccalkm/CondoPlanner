/* tslint:disable */
/* eslint-disable */
/**
 * CondoPlanner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimeSpan
 */
export interface TimeSpan {
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    ticks?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly days?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly hours?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly milliseconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly microseconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly nanoseconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly minutes?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly seconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalDays?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalHours?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalMilliseconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalMicroseconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalNanoseconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalMinutes?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSpan
     */
    readonly totalSeconds?: number;
}

/**
 * Check if a given object implements the TimeSpan interface.
 */
export function instanceOfTimeSpan(value: object): value is TimeSpan {
    return true;
}

export function TimeSpanFromJSON(json: any): TimeSpan {
    return TimeSpanFromJSONTyped(json, false);
}

export function TimeSpanFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeSpan {
    if (json == null) {
        return json;
    }
    return {
        
        'ticks': json['ticks'] == null ? undefined : json['ticks'],
        'days': json['days'] == null ? undefined : json['days'],
        'hours': json['hours'] == null ? undefined : json['hours'],
        'milliseconds': json['milliseconds'] == null ? undefined : json['milliseconds'],
        'microseconds': json['microseconds'] == null ? undefined : json['microseconds'],
        'nanoseconds': json['nanoseconds'] == null ? undefined : json['nanoseconds'],
        'minutes': json['minutes'] == null ? undefined : json['minutes'],
        'seconds': json['seconds'] == null ? undefined : json['seconds'],
        'totalDays': json['totalDays'] == null ? undefined : json['totalDays'],
        'totalHours': json['totalHours'] == null ? undefined : json['totalHours'],
        'totalMilliseconds': json['totalMilliseconds'] == null ? undefined : json['totalMilliseconds'],
        'totalMicroseconds': json['totalMicroseconds'] == null ? undefined : json['totalMicroseconds'],
        'totalNanoseconds': json['totalNanoseconds'] == null ? undefined : json['totalNanoseconds'],
        'totalMinutes': json['totalMinutes'] == null ? undefined : json['totalMinutes'],
        'totalSeconds': json['totalSeconds'] == null ? undefined : json['totalSeconds'],
    };
}

export function TimeSpanToJSON(value?: Omit<TimeSpan, 'days'|'hours'|'milliseconds'|'microseconds'|'nanoseconds'|'minutes'|'seconds'|'totalDays'|'totalHours'|'totalMilliseconds'|'totalMicroseconds'|'totalNanoseconds'|'totalMinutes'|'totalSeconds'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'ticks': value['ticks'],
    };
}

