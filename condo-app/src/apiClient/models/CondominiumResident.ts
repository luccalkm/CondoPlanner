/* tslint:disable */
/* eslint-disable */
/**
 * CondoPlanner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Condominium } from './Condominium';
import {
    CondominiumFromJSON,
    CondominiumFromJSONTyped,
    CondominiumToJSON,
} from './Condominium';

/**
 * 
 * @export
 * @interface CondominiumResident
 */
export interface CondominiumResident {
    /**
     * 
     * @type {number}
     * @memberof CondominiumResident
     */
    condominiumId?: number;
    /**
     * 
     * @type {Condominium}
     * @memberof CondominiumResident
     */
    condominium?: Condominium;
    /**
     * 
     * @type {string}
     * @memberof CondominiumResident
     */
    residentId?: string | null;
}

/**
 * Check if a given object implements the CondominiumResident interface.
 */
export function instanceOfCondominiumResident(value: object): value is CondominiumResident {
    return true;
}

export function CondominiumResidentFromJSON(json: any): CondominiumResident {
    return CondominiumResidentFromJSONTyped(json, false);
}

export function CondominiumResidentFromJSONTyped(json: any, ignoreDiscriminator: boolean): CondominiumResident {
    if (json == null) {
        return json;
    }
    return {
        
        'condominiumId': json['condominiumId'] == null ? undefined : json['condominiumId'],
        'condominium': json['condominium'] == null ? undefined : CondominiumFromJSON(json['condominium']),
        'residentId': json['residentId'] == null ? undefined : json['residentId'],
    };
}

export function CondominiumResidentToJSON(value?: CondominiumResident | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'condominiumId': value['condominiumId'],
        'condominium': CondominiumToJSON(value['condominium']),
        'residentId': value['residentId'],
    };
}

